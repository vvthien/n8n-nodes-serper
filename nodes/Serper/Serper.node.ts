import {
	IDataObject,
	IExecuteFunctions,
	INodeExecutionData,
	INodeType,
	INodeTypeDescription,
	NodeApiError,
	NodeConnectionType,
} from 'n8n-workflow';

export class Serper implements INodeType {
	description: INodeTypeDescription = {
		displayName: 'Google Search API',
		name: 'serper',
		icon: 'file:serper.svg',
		group: ['transform'],
		version: 1,
		subtitle: '={{ $parameter["resource"] + " - " + $parameter["operation"] }}',
		description:
			'Integrate with Google Search API (Serper.dev API) for search functionalities. Powered by CloudFly',
		defaults: { name: 'Serper' },
		inputs: [NodeConnectionType.Main],
		outputs: [NodeConnectionType.Main],
		credentials: [{ name: 'serperApi', required: true }],
		properties: [
			// Resources
			{
				displayName: 'Resource',
				name: 'resource',
				type: 'options',
				noDataExpression: true,
				options: [
					{ name: 'Image', value: 'images' },
					{ name: 'News', value: 'news' },
					{ name: 'Scholar', value: 'schollar' },
					{ name: 'Search', value: 'search' },
					{ name: 'Shopping', value: 'shopping' },
					{ name: 'Video', value: 'videos' },
				],
				default: 'search',
			},
			// Operations for each Resource
			{
				displayName: 'Operation',
				name: 'operation',
				type: 'options',
				noDataExpression: true,
				displayOptions: { show: { resource: ['search'] } },
				options: [
					{
						name: 'Web Search',
						value: 'webSearch',
						description: 'Basic web search',
						action: 'Perform a web search',
					},
				],
				default: 'webSearch',
			},
			{
				displayName: 'Operation',
				name: 'operation',
				type: 'options',
				noDataExpression: true,
				displayOptions: { show: { resource: ['images'] } },
				options: [
					{
						name: 'Search Images',
						value: 'searchImages',
						description: 'Search for images',
						action: 'Search images',
					},
					{
						name: 'Image Search (Lens)',
						value: 'imageSearchLens',
						description: 'Reverse image search with Lens',
						action: 'Image search lens',
					},
				],
				default: 'searchImages',
			},
			{
				displayName: 'Operation',
				name: 'operation',
				type: 'options',
				noDataExpression: true,
				displayOptions: { show: { resource: ['videos'] } },
				options: [
					{
						name: 'Find Videos',
						value: 'findVideos',
						description: 'Search for videos',
						action: 'Find videos',
					},
				],
				default: 'findVideos',
			},
			{
				displayName: 'Operation',
				name: 'operation',
				type: 'options',
				noDataExpression: true,
				displayOptions: { show: { resource: ['news'] } },
				options: [
					{
						name: 'Find News',
						value: 'findNews',
						description: 'Search for news articles',
						action: 'Find news',
					},
				],
				default: 'findNews',
			},
			{
				displayName: 'Operation',
				name: 'operation',
				type: 'options',
				noDataExpression: true,
				displayOptions: { show: { resource: ['shopping'] } },
				options: [
					{
						name: 'Shopping Search',
						value: 'shoppingSearch',
						description: 'Search for products',
						action: 'Shopping search',
					},
				],
				default: 'shoppingSearch',
			},
			{
				displayName: 'Operation',
				name: 'operation',
				type: 'options',
				noDataExpression: true,
				displayOptions: { show: { resource: ['schollar'] } },
				options: [
					{
						name: 'Scholar Search',
						value: 'scholarSearch',
						description: 'Search for scholarly articles',
						action: 'Scholar search',
					},
				],
				default: 'scholarSearch',
			},
			{
				displayName: 'Page',
				name: 'page',
				type: 'number',
				default: 1,
				description: 'Page number for paginated results',
				displayOptions: {
					show: {
						resource: ['search', 'images', 'videos', 'news', 'shopping', 'schollar'],
					},
					hide: {
						operation: ['imageSearchLens'],
					},
				},
			},
			{
				displayName: 'Query',
				name: 'query',
				type: 'string',
				required: true,
				default: '',
				description: 'The search query for the action',
				displayOptions: {
					show: {
						resource: ['search', 'images', 'videos', 'news', 'shopping', 'schollar'],
					},
					hide: {
						operation: ['imageSearchLens'],
					},
				},
			},
			{
				displayName: 'Results',
				name: 'num',
				type: 'options',
				options: [
					{ name: '10', value: 10 },
					{ name: '20', value: 20 },
					{ name: '40', value: 40 },
					{ name: '60', value: 60 },
					{ name: '80', value: 80 },
					{ name: '100', value: 100 },
				],
				default: 40,
				description: 'Number of results to return',
				displayOptions: {
					show: {
						resource: ['search', 'images', 'videos', 'news', 'shopping', 'schollar'],
					},
					hide: {
						operation: ['imageSearchLens'],
					},
				},
			},
			// Image-specific field for Lens operation
			{
				displayName: 'Image URL',
				name: 'url',
				type: 'string',
				default: '',
				placeholder: 'Image URL for reverse search',
				description: 'URL of the image for reverse search',
				required: true,
				displayOptions: {
					show: {
						resource: ['images'],
						operation: ['imageSearchLens'],
					},
				},
			},
			// Common Fields
			{
				displayName: 'Country',
				name: 'gl',
				type: 'options',
				options: [
					{ name: 'ğŸ‡¦ğŸ‡© Andorra (Ad)', value: 'ad' },
					{ name: 'ğŸ‡¦ğŸ‡ª United Arab Emirates (Ae)', value: 'ae' },
					{ name: 'ğŸ‡¦ğŸ‡« Afghanistan (Af)', value: 'af' },
					{ name: 'ğŸ‡¦ğŸ‡¬ Antigua and Barbuda (Ag)', value: 'ag' },
					{ name: 'ğŸ‡¦ğŸ‡® Anguilla (Ai)', value: 'ai' },
					{ name: 'ğŸ‡¦ğŸ‡± Albania (Al)', value: 'al' },
					{ name: 'ğŸ‡¦ğŸ‡² Armenia (Am)', value: 'am' },
					{ name: 'ğŸ‡¦ğŸ‡³ Netherlands Antilles (An)', value: 'an' },
					{ name: 'ğŸ‡¦ğŸ‡´ Angola (Ao)', value: 'ao' },
					{ name: 'ğŸ‡¦ğŸ‡¶ Antarctica (Aq)', value: 'aq' },
					{ name: 'ğŸ‡¦ğŸ‡· Argentina (Ar)', value: 'ar' },
					{ name: 'ğŸ‡¦ğŸ‡¸ American Samoa (As)', value: 'as' },
					{ name: 'ğŸ‡¦ğŸ‡¹ Austria (At)', value: 'at' },
					{ name: 'ğŸ‡¦ğŸ‡º Australia (Au)', value: 'au' },
					{ name: 'ğŸ‡¦ğŸ‡¼ Aruba (Aw)', value: 'aw' },
					{ name: 'ğŸ‡¦ğŸ‡¿ Azerbaijan (Az)', value: 'az' },
					{ name: 'ğŸ‡§ğŸ‡¦ Bosnia and Herzegovina (Ba)', value: 'ba' },
					{ name: 'ğŸ‡§ğŸ‡§ Barbados (Bb)', value: 'bb' },
					{ name: 'ğŸ‡§ğŸ‡© Bangladesh (Bd)', value: 'bd' },
					{ name: 'ğŸ‡§ğŸ‡ª Belgium (Be)', value: 'be' },
					{ name: 'ğŸ‡§ğŸ‡« Burkina Faso (Bf)', value: 'bf' },
					{ name: 'ğŸ‡§ğŸ‡¬ Bulgaria (Bg)', value: 'bg' },
					{ name: 'ğŸ‡§ğŸ‡­ Bahrain (Bh)', value: 'bh' },
					{ name: 'ğŸ‡§ğŸ‡® Burundi (Bi)', value: 'bi' },
					{ name: 'ğŸ‡§ğŸ‡¯ Benin (Bj)', value: 'bj' },
					{ name: 'ğŸ‡§ğŸ‡² Bermuda (Bm)', value: 'bm' },
					{ name: 'ğŸ‡§ğŸ‡³ Brunei Darussalam (Bn)', value: 'bn' },
					{ name: 'ğŸ‡§ğŸ‡´ Bolivia (Bo)', value: 'bo' },
					{ name: 'ğŸ‡§ğŸ‡· Brazil (Br)', value: 'br' },
					{ name: 'ğŸ‡§ğŸ‡¸ Bahamas (Bs)', value: 'bs' },
					{ name: 'ğŸ‡§ğŸ‡¹ Bhutan (Bt)', value: 'bt' },
					{ name: 'ğŸ‡§ğŸ‡» Bouvet Island (Bv)', value: 'bv' },
					{ name: 'ğŸ‡§ğŸ‡¼ Botswana (Bw)', value: 'bw' },
					{ name: 'ğŸ‡§ğŸ‡¾ Belarus (By)', value: 'by' },
					{ name: 'ğŸ‡¨ğŸ‡¦ Canada (Ca)', value: 'ca' },
					{ name: 'ğŸ‡¨ğŸ‡¨ Cocos (Keeling) Islands (Cc)', value: 'cc' },
					{ name: 'ğŸ‡¨ğŸ‡© Congo, the Democratic Republic of the (Cd)', value: 'cd' },
					{ name: 'ğŸ‡¨ğŸ‡« Central African Republic (Cf)', value: 'cf' },
					{ name: 'ğŸ‡¨ğŸ‡¬ Congo (Cg)', value: 'cg' },
					{ name: 'ğŸ‡¨ğŸ‡­ Switzerland (Ch)', value: 'ch' },
					{ name: "ğŸ‡¨ğŸ‡® Cote D'ivoire (Ci)", value: 'ci' },
					{ name: 'ğŸ‡¨ğŸ‡° Cook Islands (Ck)', value: 'ck' },
					{ name: 'ğŸ‡¨ğŸ‡± Chile (Cl)', value: 'cl' },
					{ name: 'ğŸ‡¨ğŸ‡² Cameroon (Cm)', value: 'cm' },
					{ name: 'ğŸ‡¨ğŸ‡³ China (Cn)', value: 'cn' },
					{ name: 'ğŸ‡¨ğŸ‡´ Colombia (Co)', value: 'co' },
					{ name: 'ğŸ‡¨ğŸ‡· Costa Rica (Cr)', value: 'cr' },
					{ name: 'ğŸ‡¨ğŸ‡» Cape Verde (Cv)', value: 'cv' },
					{ name: 'ğŸ‡¨ğŸ‡½ Christmas Island (Cx)', value: 'cx' },
					{ name: 'ğŸ‡¨ğŸ‡¾ Cyprus (Cy)', value: 'cy' },
					{ name: 'ğŸ‡¨ğŸ‡¿ Czech Republic (Cz)', value: 'cz' },
					{ name: 'ğŸ‡©ğŸ‡ª Germany (De)', value: 'de' },
					{ name: 'ğŸ‡©ğŸ‡¯ Djibouti (Dj)', value: 'dj' },
					{ name: 'ğŸ‡©ğŸ‡° Denmark (Dk)', value: 'dk' },
					{ name: 'ğŸ‡©ğŸ‡² Dominica (Dm)', value: 'dm' },
					{ name: 'ğŸ‡©ğŸ‡´ Dominican Republic (Do)', value: 'do' },
					{ name: 'ğŸ‡©ğŸ‡¿ Algeria (Dz)', value: 'dz' },
					{ name: 'ğŸ‡ªğŸ‡¨ Ecuador (Ec)', value: 'ec' },
					{ name: 'ğŸ‡ªğŸ‡ª Estonia (Ee)', value: 'ee' },
					{ name: 'ğŸ‡ªğŸ‡¬ Egypt (Eg)', value: 'eg' },
					{ name: 'ğŸ‡ªğŸ‡­ Western Sahara (Eh)', value: 'eh' },
					{ name: 'ğŸ‡ªğŸ‡· Eritrea (Er)', value: 'er' },
					{ name: 'ğŸ‡ªğŸ‡¸ Spain (Es)', value: 'es' },
					{ name: 'ğŸ‡ªğŸ‡¹ Ethiopia (Et)', value: 'et' },
					{ name: 'ğŸ‡«ğŸ‡® Finland (Fi)', value: 'fi' },
					{ name: 'ğŸ‡«ğŸ‡¯ Fiji (Fj)', value: 'fj' },
					{ name: 'ğŸ‡«ğŸ‡° Falkland Islands (Malvinas) (Fk)', value: 'fk' },
					{ name: 'ğŸ‡«ğŸ‡² Micronesia, Federated States of (Fm)', value: 'fm' },
					{ name: 'ğŸ‡«ğŸ‡´ Faroe Islands (Fo)', value: 'fo' },
					{ name: 'ğŸ‡«ğŸ‡· France (Fr)', value: 'fr' },
					{ name: 'ğŸ‡¬ğŸ‡¦ Gabon (Ga)', value: 'ga' },
					{ name: 'ğŸ‡¬ğŸ‡§ United Kingdom (Gb)', value: 'gb' },
					{ name: 'ğŸ‡¬ğŸ‡© Grenada (Gd)', value: 'gd' },
					{ name: 'ğŸ‡¬ğŸ‡ª Georgia (Ge)', value: 'ge' },
					{ name: 'ğŸ‡¬ğŸ‡« French Guiana (Gf)', value: 'gf' },
					{ name: 'ğŸ‡¬ğŸ‡­ Ghana (Gh)', value: 'gh' },
					{ name: 'ğŸ‡¬ğŸ‡® Gibraltar (Gi)', value: 'gi' },
					{ name: 'ğŸ‡¬ğŸ‡± Greenland (Gl)', value: 'gl' },
					{ name: 'ğŸ‡¬ğŸ‡² Gambia (Gm)', value: 'gm' },
					{ name: 'ğŸ‡¬ğŸ‡³ Guinea (Gn)', value: 'gn' },
					{ name: 'ğŸ‡¬ğŸ‡µ Guadeloupe (Gp)', value: 'gp' },
					{ name: 'ğŸ‡¬ğŸ‡¶ Equatorial Guinea (Gq)', value: 'gq' },
					{ name: 'ğŸ‡¬ğŸ‡· Greece (Gr)', value: 'gr' },
					{ name: 'ğŸ‡¬ğŸ‡¸ South Georgia and the South Sandwich Islands (Gs)', value: 'gs' },
					{ name: 'ğŸ‡¬ğŸ‡¹ Guatemala (Gt)', value: 'gt' },
					{ name: 'ğŸ‡¬ğŸ‡º Guam (Gu)', value: 'gu' },
					{ name: 'ğŸ‡¬ğŸ‡¼ Guinea-Bissau (Gw)', value: 'gw' },
					{ name: 'ğŸ‡¬ğŸ‡¾ Guyana (Gy)', value: 'gy' },
					{ name: 'ğŸ‡­ğŸ‡° Hong Kong (Hk)', value: 'hk' },
					{ name: 'ğŸ‡­ğŸ‡² Heard Island and Mcdonald Islands (Hm)', value: 'hm' },
					{ name: 'ğŸ‡­ğŸ‡³ Honduras (Hn)', value: 'hn' },
					{ name: 'ğŸ‡­ğŸ‡· Croatia (Hr)', value: 'hr' },
					{ name: 'ğŸ‡­ğŸ‡¹ Haiti (Ht)', value: 'ht' },
					{ name: 'ğŸ‡­ğŸ‡º Hungary (Hu)', value: 'hu' },
					{ name: 'ğŸ‡®ğŸ‡© Indonesia (ID)', value: 'id' },
					{ name: 'ğŸ‡®ğŸ‡ª Ireland (Ie)', value: 'ie' },
					{ name: 'ğŸ‡®ğŸ‡± Israel (Il)', value: 'il' },
					{ name: 'ğŸ‡®ğŸ‡³ India (In)', value: 'in' },
					{ name: 'ğŸ‡®ğŸ‡´ British Indian Ocean Territory (Io)', value: 'io' },
					{ name: 'ğŸ‡®ğŸ‡¶ Iraq (Iq)', value: 'iq' },
					{ name: 'ğŸ‡®ğŸ‡· Iran, Islamic Republic of (Ir)', value: 'ir' },
					{ name: 'ğŸ‡®ğŸ‡¸ Iceland (Is)', value: 'is' },
					{ name: 'ğŸ‡®ğŸ‡¹ Italy (It)', value: 'it' },
					{ name: 'ğŸ‡¯ğŸ‡² Jamaica (Jm)', value: 'jm' },
					{ name: 'ğŸ‡¯ğŸ‡´ Jordan (Jo)', value: 'jo' },
					{ name: 'ğŸ‡¯ğŸ‡µ Japan (Jp)', value: 'jp' },
					{ name: 'ğŸ‡°ğŸ‡ª Kenya (Ke)', value: 'ke' },
					{ name: 'ğŸ‡°ğŸ‡¬ Kyrgyzstan (Kg)', value: 'kg' },
					{ name: 'ğŸ‡°ğŸ‡­ Cambodia (Kh)', value: 'kh' },
					{ name: 'ğŸ‡°ğŸ‡® Kiribati (Ki)', value: 'ki' },
					{ name: 'ğŸ‡°ğŸ‡² Comoros (Km)', value: 'km' },
					{ name: 'ğŸ‡°ğŸ‡³ Saint Kitts and Nevis (Kn)', value: 'kn' },
					{ name: "ğŸ‡°ğŸ‡µ Korea, Democratic People's Republic of (Kp)", value: 'kp' },
					{ name: 'ğŸ‡°ğŸ‡· Korea, Republic of (Kr)', value: 'kr' },
					{ name: 'ğŸ‡°ğŸ‡¼ Kuwait (Kw)', value: 'kw' },
					{ name: 'ğŸ‡°ğŸ‡¾ Cayman Islands (Ky)', value: 'ky' },
					{ name: 'ğŸ‡°ğŸ‡¿ Kazakhstan (Kz)', value: 'kz' },
					{ name: "ğŸ‡±ğŸ‡¦ Lao People's Democratic Republic (La)", value: 'la' },
					{ name: 'ğŸ‡±ğŸ‡§ Lebanon (Lb)', value: 'lb' },
					{ name: 'ğŸ‡±ğŸ‡¨ Saint Lucia (Lc)', value: 'lc' },
					{ name: 'ğŸ‡±ğŸ‡® Liechtenstein (Li)', value: 'li' },
					{ name: 'ğŸ‡±ğŸ‡° Sri Lanka (Lk)', value: 'lk' },
					{ name: 'ğŸ‡±ğŸ‡· Liberia (Lr)', value: 'lr' },
					{ name: 'ğŸ‡±ğŸ‡¸ Lesotho (Ls)', value: 'ls' },
					{ name: 'ğŸ‡±ğŸ‡¹ Lithuania (Lt)', value: 'lt' },
					{ name: 'ğŸ‡±ğŸ‡º Luxembourg (Lu)', value: 'lu' },
					{ name: 'ğŸ‡±ğŸ‡» Latvia (Lv)', value: 'lv' },
					{ name: 'ğŸ‡±ğŸ‡¾ Libyan Arab Jamahiriya (Ly)', value: 'ly' },
					{ name: 'ğŸ‡²ğŸ‡¦ Morocco (Ma)', value: 'ma' },
					{ name: 'ğŸ‡²ğŸ‡¨ Monaco (Mc)', value: 'mc' },
					{ name: 'ğŸ‡²ğŸ‡© Moldova, Republic of (Md)', value: 'md' },
					{ name: 'ğŸ‡²ğŸ‡¬ Madagascar (Mg)', value: 'mg' },
					{ name: 'ğŸ‡²ğŸ‡­ Marshall Islands (Mh)', value: 'mh' },
					{ name: 'ğŸ‡²ğŸ‡° Macedonia, the Former Yugosalv Republic of (Mk)', value: 'mk' },
					{ name: 'ğŸ‡²ğŸ‡± Mali (Ml)', value: 'ml' },
					{ name: 'ğŸ‡²ğŸ‡² Myanmar (Mm)', value: 'mm' },
					{ name: 'ğŸ‡²ğŸ‡³ Mongolia (Mn)', value: 'mn' },
					{ name: 'ğŸ‡²ğŸ‡´ Macao (Mo)', value: 'mo' },
					{ name: 'ğŸ‡²ğŸ‡µ Northern Mariana Islands (Mp)', value: 'mp' },
					{ name: 'ğŸ‡²ğŸ‡¶ Martinique (Mq)', value: 'mq' },
					{ name: 'ğŸ‡²ğŸ‡· Mauritania (Mr)', value: 'mr' },
					{ name: 'ğŸ‡²ğŸ‡¸ Montserrat (Ms)', value: 'ms' },
					{ name: 'ğŸ‡²ğŸ‡¹ Malta (Mt)', value: 'mt' },
					{ name: 'ğŸ‡²ğŸ‡º Mauritius (Mu)', value: 'mu' },
					{ name: 'ğŸ‡²ğŸ‡» Maldives (Mv)', value: 'mv' },
					{ name: 'ğŸ‡²ğŸ‡¼ Malawi (Mw)', value: 'mw' },
					{ name: 'ğŸ‡²ğŸ‡½ Mexico (Mx)', value: 'mx' },
					{ name: 'ğŸ‡²ğŸ‡¾ Malaysia (My)', value: 'my' },
					{ name: 'ğŸ‡²ğŸ‡¿ Mozambique (Mz)', value: 'mz' },
					{ name: 'ğŸ‡³ğŸ‡¦ Namibia (Na)', value: 'na' },
					{ name: 'ğŸ‡³ğŸ‡¨ New Caledonia (Nc)', value: 'nc' },
					{ name: 'ğŸ‡³ğŸ‡ª Niger (Ne)', value: 'ne' },
					{ name: 'ğŸ‡³ğŸ‡« Norfolk Island (Nf)', value: 'nf' },
					{ name: 'ğŸ‡³ğŸ‡¬ Nigeria (Ng)', value: 'ng' },
					{ name: 'ğŸ‡³ğŸ‡® Nicaragua (Ni)', value: 'ni' },
					{ name: 'ğŸ‡³ğŸ‡± Netherlands (Nl)', value: 'nl' },
					{ name: 'ğŸ‡³ğŸ‡´ Norway (No)', value: 'no' },
					{ name: 'ğŸ‡³ğŸ‡µ Nepal (Np)', value: 'np' },
					{ name: 'ğŸ‡³ğŸ‡· Nauru (Nr)', value: 'nr' },
					{ name: 'ğŸ‡³ğŸ‡º Niue (Nu)', value: 'nu' },
					{ name: 'ğŸ‡³ğŸ‡¿ New Zealand (Nz)', value: 'nz' },
					{ name: 'ğŸ‡´ğŸ‡² Oman (Om)', value: 'om' },
					{ name: 'ğŸ‡µğŸ‡¦ Panama (Pa)', value: 'pa' },
					{ name: 'ğŸ‡µğŸ‡ª Peru (Pe)', value: 'pe' },
					{ name: 'ğŸ‡µğŸ‡« French Polynesia (Pf)', value: 'pf' },
					{ name: 'ğŸ‡µğŸ‡¬ Papua New Guinea (Pg)', value: 'pg' },
					{ name: 'ğŸ‡µğŸ‡­ Philippines (Ph)', value: 'ph' },
					{ name: 'ğŸ‡µğŸ‡° Pakistan (Pk)', value: 'pk' },
					{ name: 'ğŸ‡µğŸ‡± Poland (Pl)', value: 'pl' },
					{ name: 'ğŸ‡µğŸ‡² Saint Pierre and Miquelon (Pm)', value: 'pm' },
					{ name: 'ğŸ‡µğŸ‡³ Pitcairn (Pn)', value: 'pn' },
					{ name: 'ğŸ‡µğŸ‡· Puerto Rico (Pr)', value: 'pr' },
					{ name: 'ğŸ‡µğŸ‡¸ Palestinian Territory, Occupied (Ps)', value: 'ps' },
					{ name: 'ğŸ‡µğŸ‡¹ Portugal (Pt)', value: 'pt' },
					{ name: 'ğŸ‡µğŸ‡¼ Palau (Pw)', value: 'pw' },
					{ name: 'ğŸ‡µğŸ‡¾ Paraguay (Py)', value: 'py' },
					{ name: 'ğŸ‡¶ğŸ‡¦ Qatar (Qa)', value: 'qa' },
					{ name: 'ğŸ‡·ğŸ‡ª Reunion (Re)', value: 're' },
					{ name: 'ğŸ‡·ğŸ‡´ Romania (Ro)', value: 'ro' },
					{ name: 'ğŸ‡·ğŸ‡¸ Serbia and Montenegro (Rs)', value: 'rs' },
					{ name: 'ğŸ‡·ğŸ‡º Russian Federation (Ru)', value: 'ru' },
					{ name: 'ğŸ‡·ğŸ‡¼ Rwanda (Rw)', value: 'rw' },
					{ name: 'ğŸ‡¸ğŸ‡¦ Saudi Arabia (Sa)', value: 'sa' },
					{ name: 'ğŸ‡¸ğŸ‡§ Solomon Islands (Sb)', value: 'sb' },
					{ name: 'ğŸ‡¸ğŸ‡¨ Seychelles (Sc)', value: 'sc' },
					{ name: 'ğŸ‡¸ğŸ‡© Sudan (Sd)', value: 'sd' },
					{ name: 'ğŸ‡¸ğŸ‡ª Sweden (Se)', value: 'se' },
					{ name: 'ğŸ‡¸ğŸ‡¬ Singapore (Sg)', value: 'sg' },
					{ name: 'ğŸ‡¸ğŸ‡­ Saint Helena (Sh)', value: 'sh' },
					{ name: 'ğŸ‡¸ğŸ‡® Slovenia (Si)', value: 'si' },
					{ name: 'ğŸ‡¸ğŸ‡¯ Svalbard and Jan Mayen (Sj)', value: 'sj' },
					{ name: 'ğŸ‡¸ğŸ‡° Slovakia (Sk)', value: 'sk' },
					{ name: 'ğŸ‡¸ğŸ‡± Sierra Leone (Sl)', value: 'sl' },
					{ name: 'ğŸ‡¸ğŸ‡² San Marino (Sm)', value: 'sm' },
					{ name: 'ğŸ‡¸ğŸ‡³ Senegal (Sn)', value: 'sn' },
					{ name: 'ğŸ‡¸ğŸ‡´ Somalia (So)', value: 'so' },
					{ name: 'ğŸ‡¸ğŸ‡· Suriname (Sr)', value: 'sr' },
					{ name: 'ğŸ‡¸ğŸ‡¹ Sao Tome and Principe (St)', value: 'st' },
					{ name: 'ğŸ‡¸ğŸ‡» El Salvador (Sv)', value: 'sv' },
					{ name: 'ğŸ‡¸ğŸ‡¾ Syrian Arab Republic (Sy)', value: 'sy' },
					{ name: 'ğŸ‡¸ğŸ‡¿ Swaziland (Sz)', value: 'sz' },
					{ name: 'ğŸ‡¹ğŸ‡¨ Turks and Caicos Islands (Tc)', value: 'tc' },
					{ name: 'ğŸ‡¹ğŸ‡© Chad (Td)', value: 'td' },
					{ name: 'ğŸ‡¹ğŸ‡« French Southern Territories (Tf)', value: 'tf' },
					{ name: 'ğŸ‡¹ğŸ‡¬ Togo (Tg)', value: 'tg' },
					{ name: 'ğŸ‡¹ğŸ‡­ Thailand (Th)', value: 'th' },
					{ name: 'ğŸ‡¹ğŸ‡¯ Tajikistan (Tj)', value: 'tj' },
					{ name: 'ğŸ‡¹ğŸ‡° Tokelau (Tk)', value: 'tk' },
					{ name: 'ğŸ‡¹ğŸ‡± Timor-Leste (Tl)', value: 'tl' },
					{ name: 'ğŸ‡¹ğŸ‡² Turkmenistan (Tm)', value: 'tm' },
					{ name: 'ğŸ‡¹ğŸ‡³ Tunisia (Tn)', value: 'tn' },
					{ name: 'ğŸ‡¹ğŸ‡´ Tonga (To)', value: 'to' },
					{ name: 'ğŸ‡¹ğŸ‡· Turkey (Tr)', value: 'tr' },
					{ name: 'ğŸ‡¹ğŸ‡¹ Trinidad and Tobago (Tt)', value: 'tt' },
					{ name: 'ğŸ‡¹ğŸ‡» Tuvalu (Tv)', value: 'tv' },
					{ name: 'ğŸ‡¹ğŸ‡¼ Taiwan, Province of China (Tw)', value: 'tw' },
					{ name: 'ğŸ‡¹ğŸ‡¿ Tanzania, United Republic of (Tz)', value: 'tz' },
					{ name: 'ğŸ‡ºğŸ‡¦ Ukraine (Ua)', value: 'ua' },
					{ name: 'ğŸ‡ºğŸ‡¬ Uganda (Ug)', value: 'ug' },
					{ name: 'ğŸ‡ºğŸ‡² United States Minor Outlying Islands (Um)', value: 'um' },
					{ name: 'ğŸ‡ºğŸ‡¸ United States (Us)', value: 'us' },
					{ name: 'ğŸ‡ºğŸ‡¾ Uruguay (Uy)', value: 'uy' },
					{ name: 'ğŸ‡ºğŸ‡¿ Uzbekistan (Uz)', value: 'uz' },
					{ name: 'ğŸ‡»ğŸ‡¦ Holy See (Vatican City State) (Va)', value: 'va' },
					{ name: 'ğŸ‡»ğŸ‡¨ Saint Vincent and the Grenadines (Vc)', value: 'vc' },
					{ name: 'ğŸ‡»ğŸ‡ª Venezuela (Ve)', value: 've' },
					{ name: 'ğŸ‡»ğŸ‡¬ Virgin Islands, British (Vg)', value: 'vg' },
					{ name: 'ğŸ‡»ğŸ‡® Virgin Islands, U.S. (Vi)', value: 'vi' },
					{ name: 'ğŸ‡»ğŸ‡³ Viet Nam (Vn)', value: 'vn' },
					{ name: 'ğŸ‡»ğŸ‡º Vanuatu (Vu)', value: 'vu' },
					{ name: 'ğŸ‡¼ğŸ‡« Wallis and Futuna (Wf)', value: 'wf' },
					{ name: 'ğŸ‡¼ğŸ‡¸ Samoa (Ws)', value: 'ws' },
					{ name: 'ğŸ‡¾ğŸ‡ª Yemen (Ye)', value: 'ye' },
					{ name: 'ğŸ‡¾ğŸ‡¹ Mayotte (Yt)', value: 'yt' },
					{ name: 'ğŸ‡¿ğŸ‡¦ South Africa (Za)', value: 'za' },
					{ name: 'ğŸ‡¿ğŸ‡² Zambia (Zm)', value: 'zm' },
					{ name: 'ğŸ‡¿ğŸ‡¼ Zimbabwe (Zw)', value: 'zw' },
				],
				default: 'us',
				description: 'Country code for search',
				displayOptions: {
					show: {
						resource: ['search', 'images', 'videos', 'news', 'shopping', 'schollar'],
					},
				},
			},
			{
				displayName: 'Language',
				name: 'hl',
				type: 'options',
				options: [
					{ name: 'Acholi (Ach)', value: 'ach' },
					{ name: 'Afrikaans (Af)', value: 'af' },
					{ name: 'Akan (Ak)', value: 'ak' },
					{ name: 'Albanian (Sq)', value: 'sq' },
					{ name: 'Amharic (Am)', value: 'am' },
					{ name: 'Arabic (Ar)', value: 'ar' },
					{ name: 'Armenian (Hy)', value: 'hy' },
					{ name: 'Azerbaijani (Az)', value: 'az' },
					{ name: 'Basque (Eu)', value: 'eu' },
					{ name: 'Belarusian (Be)', value: 'be' },
					{ name: 'Bemba (Bem)', value: 'bem' },
					{ name: 'Bengali (Bn)', value: 'bn' },
					{ name: 'Bihari (Bh)', value: 'bh' },
					{ name: 'Bork, Bork, Bork! (Xx-Bork)', value: 'xx-bork' },
					{ name: 'Bosnian (Bs)', value: 'bs' },
					{ name: 'Breton (Br)', value: 'br' },
					{ name: 'Bulgarian (Bg)', value: 'bg' },
					{ name: 'Cambodian (Km)', value: 'km' },
					{ name: 'Catalan (Ca)', value: 'ca' },
					{ name: 'Cherokee (Chr)', value: 'chr' },
					{ name: 'Chichewa (Ny)', value: 'ny' },
					{ name: 'Chinese (Simplified) (Zh-Cn)', value: 'zh-cn' },
					{ name: 'Chinese (Traditional) (Zh-Tw)', value: 'zh-tw' },
					{ name: 'Corsican (Co)', value: 'co' },
					{ name: 'Croatian (Hr)', value: 'hr' },
					{ name: 'Czech (Cs)', value: 'cs' },
					{ name: 'Danish (Da)', value: 'da' },
					{ name: 'Dutch (Nl)', value: 'nl' },
					{ name: 'Elmer Fudd (Xx-Elmer )', value: 'xx-elmer' },
					{ name: 'English (En)', value: 'en' },
					{ name: 'Esperanto (Eo)', value: 'eo' },
					{ name: 'Estonian (Et)', value: 'et' },
					{ name: 'Ewe (Ee)', value: 'ee' },
					{ name: 'Faroese (Fo)', value: 'fo' },
					{ name: 'Filipino (Tl)', value: 'tl' },
					{ name: 'Finnish (Fi)', value: 'fi' },
					{ name: 'French (Fr)', value: 'fr' },
					{ name: 'Frisian (Fy)', value: 'fy' },
					{ name: 'Ga (Gaa)', value: 'gaa' },
					{ name: 'Galician (Gl)', value: 'gl' },
					{ name: 'Georgian (Ka)', value: 'ka' },
					{ name: 'German (De)', value: 'de' },
					{ name: 'Greek (El)', value: 'el' },
					{ name: 'Guarani (Gn)', value: 'gn' },
					{ name: 'Gujarati (Gu)', value: 'gu' },
					{ name: 'Hacker (Xx-Hacker )', value: 'xx-hacker' },
					{ name: 'Haitian Creole (Ht)', value: 'ht' },
					{ name: 'Hausa (Ha)', value: 'ha' },
					{ name: 'Hawaiian (Haw)', value: 'haw' },
					{ name: 'Hebrew (Iw)', value: 'iw' },
					{ name: 'Hindi (Hi)', value: 'hi' },
					{ name: 'Hungarian (Hu)', value: 'hu' },
					{ name: 'Icelandic (Is)', value: 'is' },
					{ name: 'Igbo (Ig)', value: 'ig' },
					{ name: 'Indonesian (ID)', value: 'id' },
					{ name: 'Interlingua (Ia)', value: 'ia' },
					{ name: 'Irish (Ga)', value: 'ga' },
					{ name: 'Italian (It)', value: 'it' },
					{ name: 'Japanese (Ja)', value: 'ja' },
					{ name: 'Javanese (Jw)', value: 'jw' },
					{ name: 'Kannada (Kn)', value: 'kn' },
					{ name: 'Kazakh (Kk)', value: 'kk' },
					{ name: 'Kinyarwanda (Rw)', value: 'rw' },
					{ name: 'Kirundi (Rn)', value: 'rn' },
					{ name: 'Klingon (Xx-Klingon)', value: 'xx-klingon' },
					{ name: 'Kongo (Kg)', value: 'kg' },
					{ name: 'Korean (Ko)', value: 'ko' },
					{ name: 'Krio (Sierra Leone) (Kri)', value: 'kri' },
					{ name: 'Kurdish (Ku)', value: 'ku' },
					{ name: 'Kurdish (SoranÃ®) (Ckb)', value: 'ckb' },
					{ name: 'Kyrgyz (Ky)', value: 'ky' },
					{ name: 'Laothian (Lo)', value: 'lo' },
					{ name: 'Latin (La)', value: 'la' },
					{ name: 'Latvian (Lv)', value: 'lv' },
					{ name: 'Lingala (Ln)', value: 'ln' },
					{ name: 'Lithuanian (Lt)', value: 'lt' },
					{ name: 'Lozi (Loz)', value: 'loz' },
					{ name: 'Luganda (Lg)', value: 'lg' },
					{ name: 'Macedonian (Mk)', value: 'mk' },
					{ name: 'Malagasy (Mg)', value: 'mg' },
					{ name: 'Malay (Ms)', value: 'ms' },
					{ name: 'Malayalam (Ml)', value: 'ml' },
					{ name: 'Maltese (Mt)', value: 'mt' },
					{ name: 'Maori (Mi)', value: 'mi' },
					{ name: 'Marathi (Mr)', value: 'mr' },
					{ name: 'Mauritian Creole (Mfe)', value: 'mfe' },
					{ name: 'Moldavian (Mo)', value: 'mo' },
					{ name: 'Mongolian (Mn)', value: 'mn' },
					{ name: 'Montenegrin (Sr-ME)', value: 'sr-ME' },
					{ name: 'Nepali (Ne)', value: 'ne' },
					{ name: 'Nigerian Pidgin (Pcm)', value: 'pcm' },
					{ name: 'Northern Sotho (Nso)', value: 'nso' },
					{ name: 'Norwegian (No)', value: 'no' },
					{ name: 'Norwegian (Nynorsk) (Nn)', value: 'nn' },
					{ name: 'Occitan (Oc)', value: 'oc' },
					{ name: 'Oriya (Or)', value: 'or' },
					{ name: 'Oromo (Om)', value: 'om' },
					{ name: 'Pashto (Ps)', value: 'ps' },
					{ name: 'Persian (Fa)', value: 'fa' },
					{ name: 'Pirate (Xx-Pirate)', value: 'xx-pirate' },
					{ name: 'Polish (Pl)', value: 'pl' },
					{ name: 'Portuguese (Brazil) (Pt-Br)', value: 'pt-br' },
					{ name: 'Portuguese (Portugal) (Pt-Pt)', value: 'pt-pt' },
					{ name: 'Portuguese (Pt)', value: 'pt' },
					{ name: 'Punjabi (Pa)', value: 'pa' },
					{ name: 'Quechua (Qu)', value: 'qu' },
					{ name: 'Romanian (Ro)', value: 'ro' },
					{ name: 'Romansh (Rm)', value: 'rm' },
					{ name: 'Runyakitara (Nyn)', value: 'nyn' },
					{ name: 'Russian (Ru)', value: 'ru' },
					{ name: 'Scots Gaelic (Gd)', value: 'gd' },
					{ name: 'Serbian (Sr)', value: 'sr' },
					{ name: 'Serbo-Croatian (Sh)', value: 'sh' },
					{ name: 'Sesotho (St)', value: 'st' },
					{ name: 'Setswana (Tn)', value: 'tn' },
					{ name: 'Seychellois Creole (Crs)', value: 'crs' },
					{ name: 'Shona (Sn)', value: 'sn' },
					{ name: 'Sindhi (Sd)', value: 'sd' },
					{ name: 'Sinhalese (Si)', value: 'si' },
					{ name: 'Slovak (Sk)', value: 'sk' },
					{ name: 'Slovenian (Sl)', value: 'sl' },
					{ name: 'Somali (So)', value: 'so' },
					{ name: 'Spanish (Es)', value: 'es' },
					{ name: 'Spanish (Latin American) (Es-419)', value: 'es-419' },
					{ name: 'Sundanese (Su)', value: 'su' },
					{ name: 'Swahili (Sw)', value: 'sw' },
					{ name: 'Swedish (Sv)', value: 'sv' },
					{ name: 'Tajik (Tg)', value: 'tg' },
					{ name: 'Tamil (Ta)', value: 'ta' },
					{ name: 'Tatar (Tt)', value: 'tt' },
					{ name: 'Telugu (Te)', value: 'te' },
					{ name: 'Thai (Th)', value: 'th' },
					{ name: 'Tigrinya (Ti)', value: 'ti' },
					{ name: 'Tonga (To)', value: 'to' },
					{ name: 'Tshiluba (Lua)', value: 'lua' },
					{ name: 'Tumbuka (Tum)', value: 'tum' },
					{ name: 'Turkish (Tr)', value: 'tr' },
					{ name: 'Turkmen (Tk)', value: 'tk' },
					{ name: 'Twi (Tw)', value: 'tw' },
					{ name: 'Uighur (Ug)', value: 'ug' },
					{ name: 'Ukrainian (Uk)', value: 'uk' },
					{ name: 'Urdu (Ur)', value: 'ur' },
					{ name: 'Uzbek (Uz)', value: 'uz' },
					{ name: 'Vietnamese (Vi)', value: 'vi' },
					{ name: 'Welsh (Cy)', value: 'cy' },
					{ name: 'Wolof (Wo)', value: 'wo' },
					{ name: 'Xhosa (Xh)', value: 'xh' },
					{ name: 'Yiddish (Yi)', value: 'yi' },
					{ name: 'Yoruba (Yo)', value: 'yo' },
					{ name: 'Zulu (Zu)', value: 'zu' },
				],
				default: 'en',
				description: 'Language code for search',
				displayOptions: {
					show: {
						resource: ['search', 'images', 'videos', 'news', 'shopping', 'schollar'],
					},
				},
			},
			{
				displayName: 'Autocorrect',
				name: 'autocorrect',
				type: 'boolean',
				default: true,
				description: 'Whether to enable autocorrect',
				displayOptions: {
					show: {
						resource: ['search', 'images', 'videos', 'news', 'shopping', 'schollar'],
					},
					hide: {
						operation: ['imageSearchLens'],
					},
				},
			},
		],
	};

	async execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {
		const items = this.getInputData();
		const returnData: INodeExecutionData[] = [];
		const baseUrl = 'https://google.serper.dev/';

		for (let i = 0; i < items.length; i++) {
			try {
				const resource = this.getNodeParameter('resource', i) as string;
				const operation = this.getNodeParameter('operation', i) as string;
				const query = this.getNodeParameter('query', i) as string;

				let endpoint = resource; // e.g., 'search', 'images', etc.
				const body: IDataObject = { q: query };

				// Add common params
				body.gl = this.getNodeParameter('gl', i) as string;
				body.hl = this.getNodeParameter('hl', i) as string;
				body.autocorrect = this.getNodeParameter('autocorrect', i) as boolean;
				body.page = this.getNodeParameter('page', i) as number;
				body.num = this.getNodeParameter('num', i) as number;

				// Handle specific operations
				if (resource === 'images' && operation === 'imageSearchLens') {
					body.url = this.getNodeParameter('url', i) as string;
					endpoint = 'lens'; // Adjust if Serper has specific endpoint for Lens
				}

				const response = await this.helpers.httpRequestWithAuthentication.call(this, 'serperApi', {
					method: 'POST',
					url: `${baseUrl}${endpoint}`,
					body,
					json: true,
				});

				const executionData = this.helpers.constructExecutionMetaData(
					this.helpers.returnJsonArray(response as IDataObject),
					{ itemData: { item: i } },
				);

				returnData.push(...executionData);
			} catch (error) {
				if (this.continueOnFail()) {
					const executionData = this.helpers.constructExecutionMetaData(
						this.helpers.returnJsonArray({ error: error.message } as IDataObject),
						{ itemData: { item: i } },
					);
					returnData.push(...executionData);
					continue;
				}
				throw new NodeApiError(this.getNode(), error);
			}
		}
		return [returnData];
	}
}
